用法：

	1) ... [options] <mapping_url> <mc_file>
	2) ... compare [options] <old_version> <new_version>
	3) ... decompile [options] <source_file>
	4) ... help
	
全局开关：

	--lang <locale> 设置语言环境
		例如： --lang zh_CN
	-D 输出详细信息（依具体命令而定）
	
1) 反混淆所有文件

	参数：
		<mapping_url> 混淆表的URL
		<mc_file> Minecraft文件位置
		
	开关：
		-Nh 阻止代码修改
		-Dy 执行但不进行反混淆
		-Nl 不输出行号对应表
		--localRename <mode> 设置局部变量命名模式
			mode可以为：
				none - 不修改，以原命名写入
				erase - 擦除所有局部变量命名
				var_count - 以局部变量顺序命名
				type_count（默认） - 以类型名命名
		--output <output> 设置输出文件
		--outmap <file> 输出格式化的混淆文件表*
		--outrev <file> 输出格式化的反混淆文件表*
		// *未启用
		
2) 对比两版本之间的文件差异

	参数：
		<old_version> 旧版本文件
		<new_version> 新版本文件
		
	开关：
		-Rs 同时对比资源文件
		
3) 反编译所有类文件

	参数：
		<source_file> Minecraft的JAR文件（建议先进行反混淆）
		
	开关：
		-Ni 不写入文件头部注释信息
		-Ro 同时输出资源文件
		--backend <backend> 设置反编译器
			目前支持的反编译器： cfr, jd-core（默认）
			对于CFR，以逗号分隔的参数可以被传递进入反编译器中，
				其中加号将被解析为空格
			e.g. --backend cfr:--help
		
4) 显示此帮助信息