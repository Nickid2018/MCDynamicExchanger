package io.github.nickid2018.mcde.injector.ui;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import io.github.nickid2018.mcde.util.I18N;
import org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;
import org.fife.ui.rtextarea.RTextArea;
import org.fife.ui.rtextarea.SearchContext;
import org.fife.ui.rtextarea.SearchEngine;

import javax.swing.*;
import java.awt.*;

public class FindDialog extends JDialog {
    private JPanel contentPane;
    private JTextField replaceField;
    private JTextField findField;
    private JCheckBox checkRegex;
    private JCheckBox checkCase;
    private JButton btnFindNext;
    private JButton btnFindPrev;
    private JButton btnReplace;
    private JButton btnReplaceAll;
    private JLabel labelFind;
    private JLabel labelReplace;

    private final RSyntaxTextArea textArea;

    public FindDialog(RSyntaxTextArea textArea) {
        setContentPane(contentPane);
        setAlwaysOnTop(true);
        setLocationRelativeTo(null);
        setTitle(I18N.getTranslation("injector.find_dialog.name"));
        this.textArea = textArea;
        createUIComponents();
        pack();
    }

    private void createUIComponents() {
        labelFind.setText(I18N.getTranslation("injector.find_dialog.label.find"));
        labelReplace.setText(I18N.getTranslation("injector.find_dialog.label.replace"));
        btnFindNext.setText(I18N.getTranslation("injector.find_dialog.button.find_next"));
        btnFindPrev.setText(I18N.getTranslation("injector.find_dialog.button.find_prev"));
        btnReplace.setText(I18N.getTranslation("injector.find_dialog.button.replace"));
        btnReplaceAll.setText(I18N.getTranslation("injector.find_dialog.button.replace_all"));
        checkCase.setText(I18N.getTranslation("injector.find_dialog.checkbox.case"));
        checkRegex.setText(I18N.getTranslation("injector.find_dialog.checkbox.regex"));

        btnFindNext.addActionListener(e -> find(true));
        btnFindPrev.addActionListener(e -> find(false));
        btnReplace.addActionListener(e -> replace(false));
        btnReplaceAll.addActionListener(e -> replace(true));
    }

    private void find(boolean next) {
        String text = findField.getText();
        if (text.length() == 0)
            return;

        SearchContext context = new SearchContext();
        context.setSearchFor(text);
        context.setMatchCase(checkCase.isSelected());
        context.setRegularExpression(checkRegex.isSelected());
        context.setSearchForward(next);
        context.setWholeWord(false);

        boolean found = SearchEngine.find(textArea, context).wasFound();
        if (!found)
            JOptionPane.showMessageDialog(this, I18N.getTranslation(
                    "injector.find_dialog.message.not_found"));
    }

    private void replace(boolean all) {
        String text = findField.getText();
        if (text.length() == 0)
            return;

        String replace = replaceField.getText();

        SearchContext context = new SearchContext();
        context.setSearchFor(text);
        context.setMatchCase(checkCase.isSelected());
        context.setRegularExpression(checkRegex.isSelected());
        context.setSearchForward(true);
        context.setWholeWord(false);
        context.setReplaceWith(replace);

        boolean found = (all ? SearchEngine.replaceAll(textArea, context) : SearchEngine.replace(textArea, context)).wasFound();
        if (!found)
            JOptionPane.showMessageDialog(this, I18N.getTranslation(
                    "injector.find_dialog.message.not_found"));
    }

    public RTextArea getTextArea() {
        return textArea;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPane = new JPanel();
        contentPane.setLayout(new GridLayoutManager(3, 1, new Insets(0, 0, 0, 0), -1, -1));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        contentPane.add(panel1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        labelReplace = new JLabel();
        labelReplace.setText("Label");
        panel1.add(labelReplace, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        replaceField = new JTextField();
        panel1.add(replaceField, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridLayoutManager(1, 4, new Insets(0, 0, 0, 0), -1, -1));
        contentPane.add(panel2, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        btnFindNext = new JButton();
        btnFindNext.setText("Button");
        panel2.add(btnFindNext, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        btnFindPrev = new JButton();
        btnFindPrev.setText("Button");
        panel2.add(btnFindPrev, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        btnReplace = new JButton();
        btnReplace.setText("Button");
        panel2.add(btnReplace, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        btnReplaceAll = new JButton();
        btnReplaceAll.setText("Button");
        panel2.add(btnReplaceAll, new GridConstraints(0, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new GridLayoutManager(1, 4, new Insets(0, 0, 0, 0), -1, -1));
        contentPane.add(panel3, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        labelFind = new JLabel();
        labelFind.setText("Label");
        panel3.add(labelFind, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        findField = new JTextField();
        panel3.add(findField, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        checkRegex = new JCheckBox();
        checkRegex.setText("CheckBox");
        panel3.add(checkRegex, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        checkCase = new JCheckBox();
        checkCase.setText("CheckBox");
        panel3.add(checkCase, new GridConstraints(0, 3, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }

}
